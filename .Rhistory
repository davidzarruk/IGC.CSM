+Dhours5+Dhours6+Dhours7,
commuting_nest,
nests = list(public = c(1, 2, 3, 5),
private = c(4)), un.nest.el = TRUE, reflevel = 1)
summary(nl_commuting_informal)
## Commuting Nested Logit Formal
rm(list = ls())
commuting_trips <- read.csv("commuting_formal_trips.csv", header = TRUE, sep = ",")
commuting_nest <- dfidx(commuting_trips,
idx = list(c("id_via", "id_soc")),
varying = 3:7,
choice = "choice", sep="")
public.transport <- idx(commuting_nest, 2) %in% c(1, 2, 3, 5)
private.transport <- idx(commuting_nest, 2) %in% c(4)
# Nested logit
nl_commuting_formal <- mlogit(choice ~ time_minutes | male + Dhours1+Dhours2+Dhours3+Dhours4
+Dhours5+Dhours6+Dhours7+Dedad2+Dedad3+Dedad4+Dedad5,
data = commuting_nest,
nests = list(public = c(1, 2, 3, 5),
private = c(4)), un.nest.el = TRUE, reflevel = 1)
summary(nl_commuting_formal)
trade_trips <- read.csv("trade_informal_trips.csv", header = TRUE, sep = ",")
trade_nest <- dfidx(trade_trips,
idx = list(c("id_via", "id_soc")),
varying = 3:7,
choice = "choice", sep="")
public.transport <- idx(trade_nest, 2) %in% c(1, 2, 3, 5)
private.transport <- idx(trade_nest, 2) %in% c(4)
# Nested logit
nl_trade_informal <- mlogit(choice ~ time_minutes | male
+ Dedad2 + Dedad3 + Dedad4 + Dedad5 + Dhours1+ Dhours2
+ Dhours3 + Dhours4 + Dhours5 + Dhours6 + Dhours7
+ Dhours8 + Dhours9 + Dhours10 + Dhours11 + Dhours12, trade_nest,
nests = list(public = c(1, 2, 3, 5),
private = c(4)), un.nest.el = TRUE, reflevel = 1)
summary(nl_trade_informal)
trade_trips <- read.csv("trade_formal_trips.csv", header = TRUE, sep = ",")
trade_nest <- dfidx(trade_trips,
idx = list(c("id_via", "id_soc")),
varying = 3:7,
choice = "choice", sep="")
public.transport <- idx(trade_nest, 2) %in% c(1, 2, 3, 5)
private.transport <- idx(trade_nest, 2) %in% c(4)
# Nested logit
nl_trade_formal <- mlogit(choice ~ time_minutes | male
+ Dedad2 + Dedad3 + Dedad4 + Dedad5 + Dhours1+ Dhours2
+ Dhours3 + Dhours4 + Dhours5 + Dhours6 + Dhours7
+ Dhours8 + Dhours9 + Dhours10 + Dhours11 + Dhours12, trade_nest,
nests = list(public = c(1, 2, 3, 5),
private = c(4)), un.nest.el = TRUE, reflevel = 1)
summary(nl_trade_formal)
rm(list = ls())
commuting_trips <- read.csv("commuting_informal_trips.csv", header = TRUE, sep = ",")
commuting_nest <- dfidx(commuting_trips,
idx = list(c("id_via", "id_soc")),
varying = 3:7,
choice = "choice", sep="")
public.transport <- idx(commuting_nest, 2) %in% c(1, 2, 3, 5)
private.transport <- idx(commuting_nest, 2) %in% c(4)
# Nested logit
nl_commuting_informal <- mlogit(choice ~ time_minutes  | male + Dhours1+Dhours2+Dhours3+Dhours4
+Dhours5+Dhours6+Dhours7,
commuting_nest,
nests = list(public = c(1, 2, 3, 5),
private = c(4)), un.nest.el = TRUE, reflevel = 1)
summary(nl_commuting_informal)
rm(list = ls())
commuting_trips <- read.csv("commuting_informal_trips.csv", header = TRUE, sep = ",")
commuting_nest <- dfidx(commuting_trips,
idx = list(c("id_via", "id_soc")),
varying = 3:7,
choice = "choice", sep="")
public.transport <- idx(commuting_nest, 2) %in% c(1, 2, 5)
private.transport <- idx(commuting_nest, 2) %in% c(4)
# Nested logit
nl_commuting_informal <- mlogit(choice ~ time_minutes  | male + Dhours1+Dhours2+Dhours3+Dhours4
+Dhours5+Dhours6+Dhours7,
commuting_nest,
nests = list(public = c(1, 2, 5),
private = c(4)), un.nest.el = TRUE, reflevel = 1)
summary(nl_commuting_informal)
rm(list = ls())
commuting_trips <- read.csv("commuting_informal_trips.csv", header = TRUE, sep = ",")
commuting_nest <- dfidx(commuting_trips,
idx = list(c("id_via", "id_soc")),
varying = 3:7,
choice = "choice", sep="")
public.transport <- idx(commuting_nest, 2) %in% c(1, 2, 5)
private.transport <- idx(commuting_nest, 2) %in% c(4)
nl_commuting_informal <- mlogit(choice ~ time_minutes  | male + Dhours1+Dhours2+Dhours3+Dhours4
+Dhours5+Dhours6+Dhours7,
commuting_nest,
nests = list(public = c(1, 2, 5),
private = c(4)), un.nest.el = TRUE, reflevel = 1)
rm(list = ls())
commuting_trips <- read.csv("commuting_informal_trips.csv", header = TRUE, sep = ",")
commuting_nest <- dfidx(commuting_trips,
idx = list(c("id_via", "id_soc")),
varying = 3:7,
choice = "choice", sep="")
public.transport <- idx(commuting_nest, 2) %in% c(1, 2, 3, 5)
private.transport <- idx(commuting_nest, 2) %in% c(4)
# Nested logit
nl_commuting_informal <- mlogit(choice ~ time_minutes  | male + Dhours1+Dhours2+Dhours3+Dhours4
+Dhours5+Dhours6+Dhours7+Dedad2+Dedad3+Dedad4+Dedad5,
commuting_nest,
nests = list(public = c(1, 2, 3, 5),
private = c(4)), un.nest.el = TRUE, reflevel = 1)
summary(nl_commuting_informal)
rm(list = ls())
commuting_trips <- read.csv("commuting_formal_trips.csv", header = TRUE, sep = ",")
commuting_nest <- dfidx(commuting_trips,
idx = list(c("id_via", "id_soc")),
varying = 3:7,
choice = "choice", sep="")
public.transport <- idx(commuting_nest, 2) %in% c(1, 2, 3, 5)
private.transport <- idx(commuting_nest, 2) %in% c(4)
# Nested logit
nl_commuting_formal <- mlogit(choice ~ time_minutes | male + Dhours1+Dhours2+Dhours3+Dhours4
+Dhours5+Dhours6+Dhours7+Dedad2+Dedad3+Dedad4+Dedad5,
data = commuting_nest,
nests = list(public = c(1, 2, 3, 5),
private = c(4)), un.nest.el = TRUE, reflevel = 1)
summary(nl_commuting_formal)
trade_trips <- read.csv("trade_informal_trips.csv", header = TRUE, sep = ",")
trade_nest <- dfidx(trade_trips,
idx = list(c("id_via", "id_soc")),
varying = 3:7,
choice = "choice", sep="")
public.transport <- idx(trade_nest, 2) %in% c(1, 2, 3, 5)
private.transport <- idx(trade_nest, 2) %in% c(4)
# Nested logit
nl_trade_informal <- mlogit(choice ~ time_minutes | male
+ Dedad2 + Dedad3 + Dedad4 + Dedad5 + Dhours1+ Dhours2
+ Dhours3 + Dhours4 + Dhours5 + Dhours6 + Dhours7
+ Dhours8 + Dhours9 + Dhours10 + Dhours11 + Dhours12, trade_nest,
nests = list(public = c(1, 2, 3, 5),
private = c(4)), un.nest.el = TRUE, reflevel = 1)
summary(nl_trade_informal)
trade_trips <- read.csv("trade_formal_trips.csv", header = TRUE, sep = ",")
trade_nest <- dfidx(trade_trips,
idx = list(c("id_via", "id_soc")),
varying = 3:7,
choice = "choice", sep="")
public.transport <- idx(trade_nest, 2) %in% c(1, 2, 3, 5)
private.transport <- idx(trade_nest, 2) %in% c(4)
# Nested logit
nl_trade_formal <- mlogit(choice ~ time_minutes | male
+ Dedad2 + Dedad3 + Dedad4 + Dedad5 + Dhours1+ Dhours2
+ Dhours3 + Dhours4 + Dhours5 + Dhours6 + Dhours7
+ Dhours8 + Dhours9 + Dhours10 + Dhours11 + Dhours12, trade_nest,
nests = list(public = c(1, 2, 3, 5),
private = c(4)), un.nest.el = TRUE, reflevel = 1)
summary(nl_trade_formal)
trade_trips <- read.csv("trade_formal_trips.csv", header = TRUE, sep = ",")
trade_nest <- dfidx(trade_trips,
idx = list(c("id_via", "id_soc")),
varying = 3:7,
choice = "choice", sep="")
public.transport <- idx(trade_nest, 2) %in% c(1, 2, 3, 5)
private.transport <- idx(trade_nest, 2) %in% c(4)
# Nested logit
nl_trade_formal <- mlogit(choice ~ time_minutes | male
+ Dedad2 + Dedad3 + Dedad4 + Dedad5 + Dhours1+ Dhours2
+ Dhours3 + Dhours4 + Dhours5 + Dhours6 + Dhours7
+ Dhours8 + Dhours9 + Dhours10 + Dhours11 + Dhours12, trade_nest,
nests = list(public = c(1, 2, 3, 5),
private = c(4)), un.nest.el = TRUE, reflevel = 1)
summary(nl_trade_formal)
trade_trips <- read.csv("trade_informal_trips.csv", header = TRUE, sep = ",")
trade_nest <- dfidx(trade_trips,
idx = list(c("id_via", "id_soc")),
varying = 3:7,
choice = "choice", sep="")
public.transport <- idx(trade_nest, 2) %in% c(1, 2, 3, 5)
private.transport <- idx(trade_nest, 2) %in% c(4)
# Nested logit
nl_trade_informal <- mlogit(choice ~ time_minutes | male
+ Dedad2 + Dedad3 + Dedad4 + Dedad5 + Dhours1+ Dhours2
+ Dhours3 + Dhours4 + Dhours5 + Dhours6 + Dhours7
+ Dhours8 + Dhours9 + Dhours10 + Dhours11 + Dhours12, trade_nest,
nests = list(public = c(1, 2, 3, 5),
private = c(4)), un.nest.el = TRUE, reflevel = 1)
summary(nl_trade_informal)
rm(list = ls())
commuting_trips <- read.csv("commuting_formal_trips.csv", header = TRUE, sep = ",")
commuting_nest <- dfidx(commuting_trips,
idx = list(c("id_via", "id_soc")),
varying = 3:7,
choice = "choice", sep="")
public.transport <- idx(commuting_nest, 2) %in% c(1, 2, 3, 5)
private.transport <- idx(commuting_nest, 2) %in% c(4)
# Nested logit
nl_commuting_formal <- mlogit(choice ~ time_minutes | male + Dhours1+Dhours2+Dhours3+Dhours4
+Dhours5+Dhours6+Dhours7+Dedad2+Dedad3+Dedad4+Dedad5,
data = commuting_nest,
nests = list(public = c(1, 2, 3, 5),
private = c(4)), un.nest.el = TRUE, reflevel = 1)
summary(nl_commuting_formal)
rm(list = ls())
commuting_trips <- read.csv("commuting_informal_trips.csv", header = TRUE, sep = ",")
commuting_nest <- dfidx(commuting_trips,
idx = list(c("id_via", "id_soc")),
varying = 3:7,
choice = "choice", sep="")
public.transport <- idx(commuting_nest, 2) %in% c(1, 2, 3, 5)
private.transport <- idx(commuting_nest, 2) %in% c(4)
# Nested logit
nl_commuting_informal <- mlogit(choice ~ time_minutes  | male + Dhours1+Dhours2+Dhours3+Dhours4
+Dhours5+Dhours6+Dhours7+Dedad2+Dedad3+Dedad4+Dedad5,
commuting_nest,
nests = list(public = c(1, 2, 3, 5),
private = c(4)), un.nest.el = TRUE, reflevel = 1)
summary(nl_commuting_informal)
#-----------------#
#   Packages      #
#-----------------#
install.packages('devtools')
library('devtools')
install_github("davidzarruk/IGCities", force = TRUE)
library(IGCities)
#setwd("C:/Users/romandzarate/GitHub/IGCities")
setwd('/Users/zarruk/Documents/IGCities/')
#-----------------#
#   Parameters    #
#-----------------#
# Data
data_locations = read.csv("data/Data for model/Chars.csv")
data_times = read.csv("data/Data for model/MatrixTravelTimes_mins.csv")
L_j = as.data.frame(data_locations$t_w_vodacom) # cantidad de trabajadores en cada location j
L_i = as.data.frame(data_locations$t_r_vodacom) # cantidad de habitantes en cada location j
L_i = L_i*sum(L_j)/sum(L_i)
K = as.data.frame(data_locations$SAL_area) # tamaÃ±o del lugar
Q = as.data.frame(data_locations$price_m2)
N = dim(L_i)[1]
t_ij = as.matrix(data_times[,2:(N+1)], dim=c(N,N))
t_ij[864,] = t_ij[863,]
t_ij[,864] = t_ij[,863]
t_ij[,714] = t_ij[,713]
t_ij[714,] = t_ij[713,]
t_ij[165,] = t_ij[164,]
t_ij[,165] = t_ij[,164]
t_ij[,138] = t_ij[,137]
t_ij[138,] = t_ij[137,]
# Parameters
alpha1 = 0.7
theta1 = 7
eta1 = 1.5
kappa1 = 2
xi1 = 1.8
nu_init = 0.005
# Number of firms
beta0 = 0.7
F = 1
sigma0 = 6
# Basic Settings
tol = 1e-6
maxiter=10
zeta = 0.0001
endo_Lr = 1
z_init=10^-4
epsilon = 0.01
mu0 = 0.3
delta0 = 0.3585
rho0 = 0.9094
eta0 = 0.1548
# Test trade costs
theta1=7
# Travel time
speed = 10
# Iceberg commuting cost
lambda = 0.01
# Workers and population
L_bar  = 1
H_bar_rest = 18
#----------------------------#
#      (2) Solve Models      #
#----------------------------#
zeta = 0.1
# Invert model
inversion_m_bl  = inversionModel(N=N,
L_i=L_i,
L_j=L_j,
Q=Q,
K=K,
t_ij=t_ij,
zeta=zeta,
z_init=z_init,
alpha=alpha1,
beta=beta0,
theta=theta1,
delta=delta0,
rho=rho0,
lambda=lambda,
epsilon=epsilon,
mu=mu0,
eta=eta0,
maxiter=200)
library('devtools')
library(IGCities)
setwd('/Users/zarruk/Documents/IGCities/')
setwd("C:/Users/romandzarate/GitHub/IGCities")
data_locations = read.csv("data/Data for model/Chars.csv")
data_times = read.csv("data/Data for model/MatrixTravelTimes_mins.csv")
L_j = as.data.frame(data_locations$t_w_vodacom) # cantidad de trabajadores en cada location j
L_i = as.data.frame(data_locations$t_r_vodacom) # cantidad de habitantes en cada location j
L_i = L_i*sum(L_j)/sum(L_i)
K = as.data.frame(data_locations$SAL_area) # tamaÃ±o del lugar
Q = as.data.frame(data_locations$price_m2)
N = dim(L_i)[1]
t_ij = as.matrix(data_times[,2:(N+1)], dim=c(N,N))
t_ij[864,] = t_ij[863,]
t_ij[,864] = t_ij[,863]
t_ij[,714] = t_ij[,713]
t_ij[714,] = t_ij[713,]
t_ij[165,] = t_ij[164,]
t_ij[,165] = t_ij[,164]
t_ij[,138] = t_ij[,137]
t_ij[138,] = t_ij[137,]
# Parameters
alpha1 = 0.7
theta1 = 7
eta1 = 1.5
kappa1 = 2
xi1 = 1.8
nu_init = 0.005
# Number of firms
beta0 = 0.7
F = 1
sigma0 = 6
# Basic Settings
tol = 1e-6
maxiter=10
zeta = 0.0001
endo_Lr = 1
z_init=10^-4
epsilon = 0.01
mu0 = 0.3
delta0 = 0.3585
rho0 = 0.9094
eta0 = 0.1548
# Test trade costs
theta1=7
# Travel time
speed = 10
# Iceberg commuting cost
lambda = 0.01
# Workers and population
L_bar  = 1
H_bar_rest = 18
#----------------------------#
#      (2) Solve Models      #
#----------------------------#
zeta = 0.1
# Invert model
inversion_m_bl  = inversionModel(N=N,
L_i=L_i,
L_j=L_j,
Q=Q,
K=K,
t_ij=t_ij,
zeta=zeta,
z_init=z_init,
alpha=alpha1,
beta=beta0,
theta=theta1,
delta=delta0,
rho=rho0,
lambda=lambda,
epsilon=epsilon,
mu=mu0,
eta=eta0,
maxiter=200)
rm(list = ls())
# Data
data_locations = read.csv("data/Data for model/Chars.csv")
data_times = read.csv("data/Data for model/MatrixTravelTimes_mins.csv")
L_j = as.data.frame(data_locations$t_w_vodacom) # cantidad de trabajadores en cada location j
L_i = as.data.frame(data_locations$t_r_vodacom) # cantidad de habitantes en cada location j
L_i = L_i*sum(L_j)/sum(L_i)
K = as.data.frame(data_locations$SAL_area) # tamaÃ±o del lugar
Q = as.data.frame(data_locations$price_m2)
N = dim(L_i)[1]
t_ij = as.matrix(data_times[,2:(N+1)], dim=c(N,N))
t_ij[864,] = t_ij[863,]
t_ij[,864] = t_ij[,863]
t_ij[,714] = t_ij[,713]
t_ij[714,] = t_ij[713,]
t_ij[165,] = t_ij[164,]
t_ij[,165] = t_ij[,164]
t_ij[,138] = t_ij[,137]
t_ij[138,] = t_ij[137,]
# Parameters
alpha1 = 0.7
theta1 = 7
eta1 = 1.5
kappa1 = 2
xi1 = 1.8
nu_init = 0.005
# Number of firms
beta0 = 0.7
F = 1
sigma0 = 6
# Basic Settings
tol = 1e-6
maxiter=10
zeta = 0.0001
endo_Lr = 1
z_init=10^-4
epsilon = 0.01
mu0 = 0.3
delta0 = 0.3585
rho0 = 0.9094
eta0 = 0.1548
# Test trade costs
theta1=7
# Travel time
speed = 10
# Iceberg commuting cost
lambda = 0.01
# Workers and population
L_bar  = 1
H_bar_rest = 18
#----------------------------#
#      (2) Solve Models      #
#----------------------------#
zeta = 0.3
# Invert model
inversion_m_bl  = inversionModel(N=N,
L_i=L_i,
L_j=L_j,
Q=Q,
K=K,
t_ij=t_ij,
zeta=zeta,
z_init=z_init,
alpha=alpha1,
beta=beta0,
theta=theta1,
delta=delta0,
rho=rho0,
lambda=lambda,
epsilon=epsilon,
mu=mu0,
eta=eta0,
maxiter=200)
N=N,
L_i=L_i,
L_j=L_j,
varphi=inversion_m_bl$varphi,
t_ij=t_ij,
K=K,
a=inversion_m_bl$a,
b=inversion_m_bl$b,
maxiter=10,
alpha=alpha1,
beta=beta0,
theta=theta1,
mu=mu0,
delta=delta0,
lambda=lambda,
rho=rho0,
eta=eta0,
epsilon=epsilon,
w_eq=inversion_m_bl$w,
u_eq=inversion_m_bl$u,
Q_eq=inversion_m_bl$Q_norm,
theta_eq=inversion_m_bl$ttheta
N=N
L_i=L_i
L_j=L_j
varphi=inversion_m_bl$varphi
t_ij=t_ij
K=K
a=inversion_m_bl$a
b=inversion_m_bl$b
maxiter=10
alpha=alpha1
beta=beta0
theta=theta1
mu=mu0
delta=delta0
lambda=lambda
rho=rho0
eta=eta0
epsilon=epsilon
w_eq=inversion_m_bl$w
u_eq=inversion_m_bl$u
Q_eq=inversion_m_bl$Q_norm
theta_eq=inversion_m_bl$ttheta
outerdiff = Inf
w = w_init
iter = 0
nu = nu_init
w_init = w_eq
outerdiff = Inf
w = w_init
iter = 0
nu = nu_init
nu
w_tr = aperm(array(w, dim=c(N,1)), c(2,1));
rep_w_tr = kronecker(w_tr^theta, array(1, dim=c(N, 1)));
# Constructing emp` loyment shares
w_tr_tau = array_operator(w_tr^theta, tau^(-theta), '*');
lambda_ij_i = array_operator(w_tr_tau, sumDims2(w_tr_tau,2), '/');
W_i = (sumDims2(w_tr_tau,2))^(1/theta);
w_tr = aperm(array(w, dim=c(N,1)), c(2,1));
rep_w_tr = kronecker(w_tr^theta, array(1, dim=c(N, 1)));
w_tr_tau = array_operator(w_tr^theta, tau^(-theta), '*');
install.packages('devtools')
library('devtools')
install_github("davidzarruk/IGCities", force = TRUE)
